{"version":3,"sources":["Components/Summary/SummaryRow.module.scss","Components/Calculator/Calculator.module.scss","Components/InputWrapper/InputWrapper.module.scss","Components/Label/Label.module.scss","Components/Summary/Summary.module.scss","Components/RadioAsButton/RadioAsButton.module.scss","Components/Label/Label.tsx","Components/InputWrapper/InputWrapper.tsx","Components/Summary/SummaryRow.tsx","Components/Summary/Summary.tsx","Components/RadioAsButton/RadioAsButton.tsx","images/icon-dollar.svg","images/icon-person.svg","Components/Calculator/Calculator.tsx","images/logo.svg","App.tsx","reportWebVitals.js","index.tsx"],"names":["module","exports","Label","labelText","name","className","styles","label","htmlFor","InputWrapper","type","value","setValue","icon","inputWrapper","src","alt","onChange","event","target","defaultValue","SummaryRow","text","textSecond","summaryRow","informationWrapper","mainText","secondText","roundTo2DecimalPlace","num","Math","round","Number","EPSILON","Summary","bill","numberOfPeople","tipPercentage","tip","total","summary","RadioAsButton","radioAsButton","Calculator","useState","setBill","setNumberOfPeople","setTipPercentage","onReset","calculator","inputsPart","dollarIcon","tipWrapper","peopleIcon","App","logo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d317018c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"summaryRow\":\"SummaryRow_summaryRow__q1I_0\",\"informationWrapper\":\"SummaryRow_informationWrapper__2alDf\",\"value\":\"SummaryRow_value__3MW52\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calculator\":\"Calculator_calculator__3THIC\",\"inputsPart\":\"Calculator_inputsPart__2fGMv\",\"tipWrapper\":\"Calculator_tipWrapper__w75fd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrapper\":\"InputWrapper_inputWrapper__e6MuF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Label_label__3I-ct\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"summary\":\"Summary_summary__wSz-_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioAsButton\":\"RadioAsButton_radioAsButton__16IYE\"};","import { FC } from \"react\";\nimport styles from \"./Label.module.scss\";\n\ninterface ILabel {\n  labelText: string;\n  name?: string;\n}\n\nconst Label: FC<ILabel> = ({labelText, name = ''}: ILabel) => (\n  <label className={styles.label} htmlFor={name}>{labelText}</label>\n);\n\nexport default Label;","import styles from \"./InputWrapper.module.scss\";\nimport { ChangeEvent, FC, HTMLInputTypeAttribute } from \"react\";\nimport Label from \"../Label/Label\";\n\ninterface IInputWrapper {\n  labelText: string;\n  type: HTMLInputTypeAttribute;\n  name: string;\n  value?: any;\n  setValue?: (item: any) => void;\n  icon?: string;\n}\n\nconst InputWrapper: FC<IInputWrapper> = ({labelText, type = 'text', name, value, setValue, icon}: IInputWrapper) => {\n\n  const handleOnChange = (event: ChangeEvent<HTMLInputElement>) => {\n    if (setValue) setValue(event.target.value);\n  }\n\n  return (\n    <div className={styles.inputWrapper}>\n      <Label labelText={labelText} name={name}/>\n      <div>\n        {icon && <img src={icon} alt=\"input icon\" />}\n        <input name={name} type={type} onChange={handleOnChange} value={value} defaultValue={0}/>\n      </div>\n    </div>\n  )\n}\n\nexport default InputWrapper;","import { FC } from \"react\";\nimport styles from \"./SummaryRow.module.scss\";\n\ninterface ISummaryRow {\n  text: string;\n  textSecond: string;\n  value: string | number;\n}\n\nconst SummaryRow: FC<ISummaryRow> = ({text, textSecond, value}: ISummaryRow) => {\n  return (\n    <div className={styles.summaryRow}>\n      <div className={styles.informationWrapper}>\n        <div className={styles.mainText}>{text}</div>\n        <div className={styles.secondText}>{textSecond}</div>\n      </div>\n      <span className={styles.value}>\n        {`$${value}`}\n      </span>\n    </div>\n  )\n}\n\nexport default SummaryRow","import { FC } from \"react\";\nimport styles from \"./Summary.module.scss\";\nimport SummaryRow from \"./SummaryRow\";\n\ninterface ISummary {\n  bill: number;\n  numberOfPeople: number;\n  tipPercentage: number;\n}\n\nconst roundTo2DecimalPlace = (num: number) => Math.round((num + Number.EPSILON) * 100) / 100;\n\nconst Summary: FC<ISummary> = ({bill = 0, numberOfPeople = 0, tipPercentage = 0}: ISummary) => {\n  const tip = roundTo2DecimalPlace(bill * tipPercentage / (numberOfPeople | 1));\n  const total = roundTo2DecimalPlace(bill / (numberOfPeople | 1) + tip);\n\n  return (\n    <div className={styles.summary}>\n      <div>\n        <SummaryRow text=\"Tip Amount\" textSecond=\"/ person\" value={tip}/>\n        <SummaryRow text=\"Total\" textSecond=\"/ person\" value={total}/>\n      </div>\n      <button type=\"reset\">Reset</button>\n    </div>\n  )\n}\n\nexport default Summary;","import styles from \"./RadioAsButton.module.scss\";\nimport { FC } from \"react\";\n\ninterface IRadioAsButton {\n  labelText: string;\n  name: string;\n  value: string;\n}\n\nconst RadioAsButton: FC<IRadioAsButton> = ({labelText, name, value}: IRadioAsButton) => {\n  return (\n    <div className={styles.radioAsButton}>\n      <input name={name} type=\"radio\" value={value}/>\n      <label htmlFor={name}>{labelText}</label>\n    </div>\n  )\n}\nexport default RadioAsButton;","export default __webpack_public_path__ + \"static/media/icon-dollar.9f9be353.svg\";","export default __webpack_public_path__ + \"static/media/icon-person.65bfd204.svg\";","import React, { FC, useState } from \"react\";\nimport styles from \"./Calculator.module.scss\";\nimport InputWrapper from \"../InputWrapper/InputWrapper\";\nimport Summary from \"../Summary/Summary\";\nimport RadioAsButton from \"../RadioAsButton/RadioAsButton\";\nimport dollarIcon from \"../../images/icon-dollar.svg\";\nimport peopleIcon from \"../../images/icon-person.svg\";\nimport Label from \"../Label/Label\";\n\nconst Calculator: FC = () => {\n  const [bill, setBill] = useState(0);\n  const [numberOfPeople, setNumberOfPeople] = useState(0);\n  const [tipPercentage, setTipPercentage] = useState(0);\n\n  const handleReset = () => {\n    setBill(0);\n    setNumberOfPeople(0);\n    setTipPercentage(0);\n  };\n\n  const handleOnChangeTipPercentage = (event: any) => {\n    if (event.target.name === 'tipPercentage') setTipPercentage(event.target.value);\n  }\n\n  return (\n    <form onReset={handleReset} className={styles.calculator} onChange={handleOnChangeTipPercentage}>\n      <div className={styles.inputsPart}>\n        <InputWrapper\n          labelText=\"Bill\" type=\"text\" name=\"bill\"\n          value={bill} setValue={setBill} icon={dollarIcon}\n        />\n        <div>\n          <Label labelText=\"Select Tip %\"/>\n          <div className={styles.tipWrapper}>\n            <RadioAsButton labelText=\"5%\" name=\"tipPercentage\" value=\"0.05\"/>\n            <RadioAsButton labelText=\"10%\" name=\"tipPercentage\" value=\"0.10\"/>\n            <RadioAsButton labelText=\"15%\" name=\"tipPercentage\" value=\"0.15\"/>\n            <RadioAsButton labelText=\"25%\" name=\"tipPercentage\" value=\"0.25\"/>\n            <RadioAsButton labelText=\"50%\" name=\"tipPercentage\" value=\"0.50\"/>\n          </div>\n        </div>\n        <InputWrapper\n          labelText=\"Number of People\" type=\"text\" name=\"numberOfPeople\"\n          value={numberOfPeople} setValue={setNumberOfPeople} icon={peopleIcon}\n        />\n      </div>\n      <Summary bill={bill} numberOfPeople={numberOfPeople}  tipPercentage={tipPercentage}/>\n    </form>\n  )\n}\n\nexport default Calculator;","export default __webpack_public_path__ + \"static/media/logo.3cc0528b.svg\";","import './App.scss';\nimport Calculator from \"./Components/Calculator/Calculator\";\nimport logo from \"./images/logo.svg\"\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <div>\n        <img className=\"logo\" src={logo} alt=\"logo\"/>\n        <Calculator/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}